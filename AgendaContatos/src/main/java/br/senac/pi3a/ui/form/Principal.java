package br.senac.pi3a.ui.form;

import br.senac.pi3a.exceptions.ContatoException;
import br.senac.pi3a.exceptions.DataSourceException;
import br.senac.pi3a.model.Contato;
import br.senac.pi3a.services.ServiceContato;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author everton
 */
public class Principal extends javax.swing.JFrame {

    private String buscar = null;
    private boolean contCliqueCaixaPesquisa = false;
    private boolean editando = false;
    private int idContatoAlterar;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContainerHeader = new javax.swing.JPanel();
        panelHeaderPrincipal = new javax.swing.JPanel();
        btnContatos = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        panelHeaderAdicionar = new javax.swing.JPanel();
        btnVoltarContatos = new javax.swing.JButton();
        btnAdicionarAtivo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        panelMain = new javax.swing.JPanel();
        panelProcurar = new javax.swing.JPanel();
        txtProcurarContato = new javax.swing.JTextField();
        btnProcurarContato = new javax.swing.JButton();
        scrollProcurar = new javax.swing.JScrollPane();
        tableProcurar = new javax.swing.JTable();
        panelAdicionar = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblSobrenome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtSobrenome = new javax.swing.JTextField();
        separador = new javax.swing.JSeparator();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cboTipoTelefone = new javax.swing.JComboBox<>();
        lblSexo = new javax.swing.JLabel();
        lblSexo1 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        ckbFavorito = new javax.swing.JCheckBox();
        cboSexo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(201, 223, 255));
        setMinimumSize(new java.awt.Dimension(485, 560));

        panelContainerHeader.setLayout(new java.awt.CardLayout());

        panelHeaderPrincipal.setBackground(new java.awt.Color(27, 169, 146));

        btnContatos.setBackground(new java.awt.Color(25, 169, 147));
        btnContatos.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnContatos.setForeground(new java.awt.Color(247, 207, 0));
        btnContatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contato_ativo_md.png"))); // NOI18N
        btnContatos.setText("Contatos");
        btnContatos.setBorder(null);
        btnContatos.setBorderPainted(false);
        btnContatos.setContentAreaFilled(false);
        btnContatos.setFocusPainted(false);
        btnContatos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnContatos.setMaximumSize(new java.awt.Dimension(69, 71));
        btnContatos.setMinimumSize(new java.awt.Dimension(69, 71));
        btnContatos.setPreferredSize(new java.awt.Dimension(69, 71));
        btnContatos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btnAdicionar.setBackground(new java.awt.Color(25, 169, 147));
        btnAdicionar.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnAdicionar.setForeground(new java.awt.Color(55, 64, 77));
        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adicionar_md.png"))); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setBorder(null);
        btnAdicionar.setBorderPainted(false);
        btnAdicionar.setContentAreaFilled(false);
        btnAdicionar.setFocusPainted(false);
        btnAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionar.setMinimumSize(new java.awt.Dimension(69, 71));
        btnAdicionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdicionarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdicionarMouseExited(evt);
            }
        });
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editar_xs.png"))); // NOI18N
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setDefaultCapable(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnDeletar.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deletar_xs.png"))); // NOI18N
        btnDeletar.setBorderPainted(false);
        btnDeletar.setContentAreaFilled(false);
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHeaderPrincipalLayout = new javax.swing.GroupLayout(panelHeaderPrincipal);
        panelHeaderPrincipal.setLayout(panelHeaderPrincipalLayout);
        panelHeaderPrincipalLayout.setHorizontalGroup(
            panelHeaderPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnContatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(150, 150, 150)
                .addComponent(btnDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        panelHeaderPrincipalLayout.setVerticalGroup(
            panelHeaderPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHeaderPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnContatos, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelHeaderPrincipalLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelHeaderPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeletar)
                    .addComponent(btnEditar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelContainerHeader.add(panelHeaderPrincipal, "cardHeaderPrincipal");

        panelHeaderAdicionar.setBackground(new java.awt.Color(27, 169, 146));

        btnVoltarContatos.setBackground(new java.awt.Color(25, 169, 147));
        btnVoltarContatos.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnVoltarContatos.setForeground(new java.awt.Color(55, 64, 77));
        btnVoltarContatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contato_md.png"))); // NOI18N
        btnVoltarContatos.setText("Contatos");
        btnVoltarContatos.setBorder(null);
        btnVoltarContatos.setBorderPainted(false);
        btnVoltarContatos.setContentAreaFilled(false);
        btnVoltarContatos.setFocusPainted(false);
        btnVoltarContatos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltarContatos.setMaximumSize(new java.awt.Dimension(69, 71));
        btnVoltarContatos.setMinimumSize(new java.awt.Dimension(69, 71));
        btnVoltarContatos.setPreferredSize(new java.awt.Dimension(69, 71));
        btnVoltarContatos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVoltarContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVoltarContatosMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVoltarContatosMouseEntered(evt);
            }
        });
        btnVoltarContatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarContatosActionPerformed(evt);
            }
        });

        btnAdicionarAtivo.setBackground(new java.awt.Color(25, 169, 147));
        btnAdicionarAtivo.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnAdicionarAtivo.setForeground(new java.awt.Color(247, 207, 0));
        btnAdicionarAtivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adicionar_ativo_md.png"))); // NOI18N
        btnAdicionarAtivo.setText("Adicionar");
        btnAdicionarAtivo.setBorder(null);
        btnAdicionarAtivo.setBorderPainted(false);
        btnAdicionarAtivo.setContentAreaFilled(false);
        btnAdicionarAtivo.setFocusPainted(false);
        btnAdicionarAtivo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionarAtivo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionarAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAtivoActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancelar_xs.png"))); // NOI18N
        btnCancelar.setBorderPainted(false);
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salvar_xs.png"))); // NOI18N
        btnSalvar.setBorderPainted(false);
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHeaderAdicionarLayout = new javax.swing.GroupLayout(panelHeaderAdicionar);
        panelHeaderAdicionar.setLayout(panelHeaderAdicionarLayout);
        panelHeaderAdicionarLayout.setHorizontalGroup(
            panelHeaderAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderAdicionarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnVoltarContatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdicionarAtivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(142, 142, 142)
                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
        panelHeaderAdicionarLayout.setVerticalGroup(
            panelHeaderAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderAdicionarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelHeaderAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelHeaderAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnVoltarContatos, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        panelContainerHeader.add(panelHeaderAdicionar, "cardHeaderAdicionar");

        panelMain.setLayout(new java.awt.CardLayout());

        txtProcurarContato.setForeground(new java.awt.Color(135, 128, 128));
        txtProcurarContato.setText("Procurar...");
        txtProcurarContato.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtProcurarContato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProcurarContatoMouseClicked(evt);
            }
        });
        txtProcurarContato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProcurarContatoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProcurarContatoKeyReleased(evt);
            }
        });

        btnProcurarContato.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        btnProcurarContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/procurar.png"))); // NOI18N
        btnProcurarContato.setBorderPainted(false);
        btnProcurarContato.setContentAreaFilled(false);
        btnProcurarContato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProcurarContatoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProcurarContatoMouseExited(evt);
            }
        });
        btnProcurarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarContatoActionPerformed(evt);
            }
        });

        tableProcurar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tableProcurar.setForeground(new java.awt.Color(55, 64, 77));
        tableProcurar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Nome", "Telefone", "Favorito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProcurar.setRowHeight(30);
        tableProcurar.setSelectionBackground(new java.awt.Color(201, 223, 255));
        tableProcurar.setSelectionForeground(new java.awt.Color(55, 64, 77));
        scrollProcurar.setViewportView(tableProcurar);
        if (tableProcurar.getColumnModel().getColumnCount() > 0) {
            tableProcurar.getColumnModel().getColumn(0).setMinWidth(0);
            tableProcurar.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableProcurar.getColumnModel().getColumn(0).setMaxWidth(0);
            tableProcurar.getColumnModel().getColumn(3).setMinWidth(70);
            tableProcurar.getColumnModel().getColumn(3).setPreferredWidth(70);
            tableProcurar.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        javax.swing.GroupLayout panelProcurarLayout = new javax.swing.GroupLayout(panelProcurar);
        panelProcurar.setLayout(panelProcurarLayout);
        panelProcurarLayout.setHorizontalGroup(
            panelProcurarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProcurarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProcurarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelProcurarLayout.createSequentialGroup()
                        .addComponent(txtProcurarContato, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarContato, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelProcurarLayout.setVerticalGroup(
            panelProcurarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProcurarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProcurarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtProcurarContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarContato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(scrollProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE))
        );

        panelProcurarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnProcurarContato, txtProcurarContato});

        panelMain.add(panelProcurar, "cardProcurar");
        panelProcurar.getAccessibleContext().setAccessibleName("cardProcurar");

        panelAdicionar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adicionar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 15), new java.awt.Color(55, 64, 77))); // NOI18N
        panelAdicionar.setForeground(new java.awt.Color(55, 64, 77));

        lblNome.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblNome.setForeground(new java.awt.Color(55, 64, 77));
        lblNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNome.setText("* Nome");

        lblSobrenome.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblSobrenome.setForeground(new java.awt.Color(55, 64, 77));
        lblSobrenome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSobrenome.setText("* Sobrenome");

        txtNome.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtNome.setForeground(new java.awt.Color(55, 64, 77));
        txtNome.setText("Everton");
        txtNome.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtNome.setSelectionColor(new java.awt.Color(255, 187, 0));

        txtSobrenome.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtSobrenome.setForeground(new java.awt.Color(55, 64, 77));
        txtSobrenome.setText("Roberto");
        txtSobrenome.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtSobrenome.setSelectionColor(new java.awt.Color(255, 187, 0));

        separador.setBackground(new java.awt.Color(55, 64, 77));
        separador.setForeground(new java.awt.Color(55, 64, 77));

        lblTelefone.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblTelefone.setForeground(new java.awt.Color(55, 64, 77));
        lblTelefone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTelefone.setText("* Telefone");

        txtTelefone.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtTelefone.setForeground(new java.awt.Color(55, 64, 77));
        txtTelefone.setText("(11) 5515-2677");
        txtTelefone.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtTelefone.setSelectionColor(new java.awt.Color(255, 187, 0));

        lblEmail.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(55, 64, 77));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmail.setText("E-mail");

        txtEmail.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(55, 64, 77));
        txtEmail.setText("everton_roliveira@outlook.com");
        txtEmail.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtEmail.setSelectionColor(new java.awt.Color(255, 187, 0));

        cboTipoTelefone.setEditable(true);
        cboTipoTelefone.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        cboTipoTelefone.setForeground(new java.awt.Color(55, 64, 77));
        cboTipoTelefone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casa", "Celular", "Trabalho" }));

        lblSexo.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblSexo.setForeground(new java.awt.Color(55, 64, 77));
        lblSexo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSexo.setText("* Sexo");

        lblSexo1.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        lblSexo1.setForeground(new java.awt.Color(55, 64, 77));
        lblSexo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSexo1.setText("* Data de nascimento");

        txtDataNascimento.setForeground(new java.awt.Color(55, 64, 77));
        txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataNascimento.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtDataNascimento.setMargin(new java.awt.Insets(5, 10, 5, 10));
        txtDataNascimento.setSelectionColor(new java.awt.Color(255, 187, 0));

        ckbFavorito.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        ckbFavorito.setForeground(new java.awt.Color(255, 187, 0));
        ckbFavorito.setText("Favorito");

        cboSexo.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        cboSexo.setForeground(new java.awt.Color(55, 64, 77));
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Feminino", "Masculino" }));

        javax.swing.GroupLayout panelAdicionarLayout = new javax.swing.GroupLayout(panelAdicionar);
        panelAdicionar.setLayout(panelAdicionarLayout);
        panelAdicionarLayout.setHorizontalGroup(
            panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separador, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addComponent(lblTelefone)
                    .addComponent(lblSobrenome)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome)
                    .addComponent(txtSobrenome))
                .addContainerGap())
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(ckbFavorito)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSexo)
                    .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSexo1)
                    .addComponent(txtDataNascimento))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtTelefone)
                .addGap(18, 18, 18)
                .addComponent(cboTipoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtEmail)
                .addGap(12, 12, 12))
        );
        panelAdicionarLayout.setVerticalGroup(
            panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblSobrenome)
                    .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(separador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cboTipoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSexo)
                    .addComponent(lblSexo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbFavorito)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        panelAdicionarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboSexo, txtDataNascimento});

        panelAdicionarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboTipoTelefone, txtTelefone});

        panelMain.add(panelAdicionar, "cardAdicionar");
        panelAdicionar.getAccessibleContext().setAccessibleName("cardAdicionar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContainerHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelContainerHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // **************MÉTODOS ***************
    //Insere Contato
    public void insereContato(Contato contato) {
        if (camposPreenchidos()) {

            contato.setNome(txtNome.getText());
            contato.setSobrenome(txtSobrenome.getText());
            contato.setTelefone(txtTelefone.getText());
            contato.setTipoTelefone(cboTipoTelefone.getSelectedIndex());
            contato.setEmail(txtEmail.getText());
            contato.setSexo(cboSexo.getSelectedIndex());

            //Formata a data 
            SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
            Date data = null; // cria um objeto do tipo date
            try {

                data = (Date) formataData.parse(txtDataNascimento.getText());
            } catch (Exception e) {
                data = null;
            }
            contato.setDataNascimento(data);
            contato.setFavorito(ckbFavorito.isSelected());

            if (!editando) {
                try {
                    ServiceContato.inserirContato(contato);
                    JOptionPane.showMessageDialog(rootPane, "Contato inserido com sucesso!!");
                    editando = false;
                    telaProcurarContatos();
                    try {
                        refreshList();
                    } catch (Exception ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (ContatoException | DataSourceException e) {
                    JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                            "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                try {
                    contato.setId(idContatoAlterar);
                    ServiceContato.editarContato(contato);
                    JOptionPane.showMessageDialog(rootPane, "Contato alterado com sucesso!!");
                    editando = false;
                    telaProcurarContatos();
                    try {
                        refreshList();
                    } catch (Exception ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (ContatoException | DataSourceException e) {
                    JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                            "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            // Se o contato for inserido com sucesso limpa os campos
            limpaCampos();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Preencha os campos marcados com (*)!!!");
        }
    }

    // Verifica se os campos marcados com (*) estão preenchidos
    public boolean camposPreenchidos() {
        if (txtNome.getText().equals("")) {
            return false;
        }
        if (txtSobrenome.getText().equals("")) {
            return false;
        }
        if (txtTelefone.getText().equals("")) {
            return false;
        }
        if (txtDataNascimento.getText().equals("")) {
            return false;
        }
        return cboSexo.getSelectedIndex() != 0;
    }

    // Limpa os campos
    public void limpaCampos() {
        txtNome.setText("");
        txtSobrenome.setText("");
        txtTelefone.setText("");
        cboTipoTelefone.setSelectedIndex(0);
        txtEmail.setText("");
        cboSexo.setSelectedIndex(0);
        txtDataNascimento.setText("");
        ckbFavorito.setSelected(false);
    }

    //Atualiza a lista de clientes
    public boolean refreshList()
            throws ContatoException, Exception {
        //Realiza a pesquisa de clientes com o último valor de pesquisa
        //para atualizar a lista
        List<Contato> resultado;
        try {
            int numero = Integer.parseInt(buscar);
            resultado = ServiceContato.procurarContatoTelefone(buscar);
        } catch (NumberFormatException | ContatoException | DataSourceException e) {
            resultado = ServiceContato.procurarContatoNome(buscar);
        }

        //Obtém o elemento representante do conteúdo da tabela na tela
        DefaultTableModel model = (DefaultTableModel) tableProcurar.getModel();
        //Indica que a tabela deve excluir todos seus elementos
        //Isto limpará a lista, mesmo que a pesquisa não tenha sucesso
        model.setRowCount(0);

        //Verifica se não existiram resultados. Caso afirmativo, encerra a
        //atualização e indica ao elemento acionador o não sucesso da pesquisa
        if (resultado == null || resultado.size() <= 0) {
            return false;
        }

        //Percorre a lista de resultados e os adiciona na tabela
        for (int i = 0; i < resultado.size(); i++) {
            Contato contato = resultado.get(i);
            if (contato != null) {
                Object[] row = new Object[4];
                row[0] = contato.getId();
                row[1] = contato.getNome();
                row[2] = contato.getTelefone();
                if (contato.getFavorito()) {
                    row[3] = "Sim";
                } else {
                    row[3] = "Não";
                }
                model.addRow(row);
            }
        }

        //Se chegamos até aqui, a pesquisa teve sucesso, então
        //retornamos "true" para o elemento acionante, indicando
        //que não devem ser exibidas mensagens de erro
        return true;
    }

    // Chama a tela de procurar contatos
    public void telaProcurarContatos() {
        CardLayout cardMain = (CardLayout) panelMain.getLayout();
        cardMain.show(panelMain, "cardProcurar");

        CardLayout cardHeader = (CardLayout) panelContainerHeader.getLayout();
        cardHeader.show(panelContainerHeader, "cardHeaderPrincipal");
    }

    // Chama a tela para inserir ou alterar contato
    public void telaInsereContato() {
        CardLayout cardMain = (CardLayout) panelMain.getLayout();
        cardMain.show(panelMain, "cardAdicionar");

        CardLayout cardHeader = (CardLayout) panelContainerHeader.getLayout();
        cardHeader.show(panelContainerHeader, "cardHeaderAdicionar");
    }

    // preenche os campos com os dados do contato
    public void completaTelaEdicao(Contato contato) {

        txtNome.setText(contato.getNome());
        txtSobrenome.setText(contato.getSobrenome());
        txtTelefone.setText(contato.getTelefone());
        cboTipoTelefone.setSelectedIndex(contato.getTipoTelefone());
        txtEmail.setText(contato.getEmail());
        cboSexo.setSelectedIndex(contato.getSexo());
        
        SimpleDateFormat formata = new SimpleDateFormat("dd/MM/yyyy");  
        
        txtDataNascimento.setText(formata.format(contato.getDataNascimento()));
        ckbFavorito.setSelected(contato.getFavorito());
    }

    private void btnVoltarContatosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarContatosMouseEntered
        btnVoltarContatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contato_ativo_md.png")));
    }//GEN-LAST:event_btnVoltarContatosMouseEntered

    private void btnVoltarContatosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarContatosMouseExited
        btnVoltarContatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contato_md.png")));
    }//GEN-LAST:event_btnVoltarContatosMouseExited

    private void btnProcurarContatoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcurarContatoMouseEntered
        btnProcurarContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/procurar_ativo.png")));
    }//GEN-LAST:event_btnProcurarContatoMouseEntered

    private void btnProcurarContatoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcurarContatoMouseExited
        btnProcurarContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/procurar.png")));
    }//GEN-LAST:event_btnProcurarContatoMouseExited

    private void txtProcurarContatoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProcurarContatoMouseClicked
        contCliqueCaixaPesquisa = true;
        boolean resultSearch = false;
        if (contCliqueCaixaPesquisa) {
            txtProcurarContato.setText("");
            try {
                resultSearch = refreshList();
            } catch (Exception ex) {
                
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtProcurarContatoMouseClicked

    // btn Salvar
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Contato contato = new Contato();
        insereContato(contato);
    }//GEN-LAST:event_btnSalvarActionPerformed

    // btn Cancelar
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        telaProcurarContatos();
        limpaCampos();
        editando = false;
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnProcurarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarContatoActionPerformed
        //Inicializa o sucesso da pesquisa com valor negativo, indicando que
        //a pesquisa de clientes não obteve resultados (situação padrão)
        boolean resultSearch = false;
        //Grava o campo de pesquisa como a última pesquisa válida. O valor
        //de última pesquisa válida é utilizado na atualização da lista
        if (!contCliqueCaixaPesquisa) {
            buscar = null;
            contCliqueCaixaPesquisa = false;
        } else {
            buscar = txtProcurarContato.getText();
            contCliqueCaixaPesquisa = false;
        }

        try {
            //Solicita a atualização da lista com o novo critério
            //de pesquisa (ultimaPesquisa)
            resultSearch = refreshList();
            txtProcurarContato.setText("Procurar...");
        } catch (Exception e) {
            //Exibe mensagens de erro na fonte de dados e para o listener
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                    "Falha ao obter lista", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Exibe mensagem de erro caso a pesquisa não tenha resultados
        if (!resultSearch) {
            JOptionPane.showMessageDialog(rootPane, "A pesquisa não retornou resultados ",
                    "Sem resultados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnProcurarContatoActionPerformed

    private void btnAdicionarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarMouseEntered
        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adicionar_ativo_md.png")));
    }//GEN-LAST:event_btnAdicionarMouseEntered

    private void btnAdicionarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarMouseExited
        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adicionar_md.png")));
    }//GEN-LAST:event_btnAdicionarMouseExited

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        telaInsereContato();
        txtProcurarContato.setText("Procurar...");
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnVoltarContatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarContatosActionPerformed
        telaProcurarContatos();
        limpaCampos();
        editando = false;
    }//GEN-LAST:event_btnVoltarContatosActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {

            //Obtém a linha selecionada na tabela de resultados
            final int row = tableProcurar.getSelectedRow();
            //Verifica se há linha selecionada na tabela
            if (row >= 0) {
                //Obtém a linha selecionada na tabela
                int id = (int) tableProcurar.getValueAt(row, 0);

                //Solicita ao serviço a obtenção do cliente a partir do
                //ID selecionado na tabela
                Contato contato = ServiceContato.obterContato(id);
                idContatoAlterar = contato.getId();

                //Cria uma nova instância da tela de edição,
                //configura o cliente selecionado como elemento a
                //ser editado e mostra a tela de edição.
                //chama o método que envia para a tela de inserção de clientes
                // com os dados j ápreenchidos nos campos.
                telaInsereContato();

                // Método que preenche os campos do cliente
                completaTelaEdicao(contato);
                editando = true;
                txtProcurarContato.setText("Procurar...");
            }
        } catch (Exception e) {
            //Se ocorrer algum erro técnico, mostra-o no console,
            //mas esconde-o do usuário
            e.printStackTrace();
            //Exibe uma mensagem de erro genérica ao usuário
            JOptionPane.showMessageDialog(rootPane, "Não é possível "
                    + "exibir os detalhes deste cliente.",
                    "Erro ao abrir detalhe", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    //btn Deletar
    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        //Verifica se há itens selecionados para exclusão.
        //Caso negativo, ignora o comando
        if (tableProcurar.getSelectedRow() >= 0) {

            //Obtém a linha do item selecionado
            final int row = tableProcurar.getSelectedRow();
            //Obtém o nome do contato da linha indicada para exibição
            //de mensagem de confirmação de exclusão utilizando seu nome
            String nome = (String) tableProcurar.getValueAt(row, 1);
            //Mostra o diálogo de confirmação de exclusão
            int resposta = JOptionPane.showConfirmDialog(rootPane,
                    "Excluir o contato \"" + nome + "\"?",
                    "Confirmar exclusão", JOptionPane.YES_NO_OPTION);
            //Se o valor de resposta for "Sim" para a exclusão
            if (resposta == JOptionPane.YES_OPTION) {
                try {
                    //Obtém o id do contato
                    int id = (int) tableProcurar.getValueAt(row, 0);
                    //Solicita ao serviço a inativação do cliente com o ID
                    ServiceContato.excluirContato(id);
                    //Atualiza a lista após a "exclusão"
                    this.refreshList();
                    JOptionPane.showMessageDialog(rootPane, "Contato Excluido com sucesso!!");
                    txtProcurarContato.setText("Procurar...");
                } catch (Exception e) {
                    //Se ocorrer algum erro técnico, mostra-o no console,
                    //mas esconde-o do usuário
                    e.printStackTrace();
                    //Exibe uma mensagem de erro genérica ao usuário
                    JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                            "Falha na Exclusão", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnAdicionarAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAtivoActionPerformed
        editando = false;
    }//GEN-LAST:event_btnAdicionarAtivoActionPerformed

    private void txtProcurarContatoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarContatoKeyPressed
        
    }//GEN-LAST:event_txtProcurarContatoKeyPressed

    private void txtProcurarContatoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarContatoKeyReleased
        boolean resultSearch = false;

        buscar = txtProcurarContato.getText();
        try {
            //Solicita a atualização da lista com o novo critério
            //de pesquisa (ultimaPesquisa)
            resultSearch = refreshList();
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_txtProcurarContatoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAdicionarAtivo;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnContatos;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnProcurarContato;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltarContatos;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JComboBox<String> cboTipoTelefone;
    private javax.swing.JCheckBox ckbFavorito;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblSexo1;
    private javax.swing.JLabel lblSobrenome;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JPanel panelAdicionar;
    private javax.swing.JPanel panelContainerHeader;
    private javax.swing.JPanel panelHeaderAdicionar;
    private javax.swing.JPanel panelHeaderPrincipal;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelProcurar;
    private javax.swing.JScrollPane scrollProcurar;
    private javax.swing.JSeparator separador;
    private javax.swing.JTable tableProcurar;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtProcurarContato;
    private javax.swing.JTextField txtSobrenome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
